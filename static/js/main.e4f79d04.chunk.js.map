{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","css","list","FeedbackOptions","options","onLeaveFeedback","keyObject","Object","keys","wrapperButtons","map","nameButton","key","type","onClick","Section","title","children","titleFeedback","Notification","message","text","App","state","countTotalFeedback","feedbacks","values","reduce","feedback","countPositiveFeedbackPercentage","goodFeedback","totalFeedback","Math","round","value","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gJACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,eAAiB,0C,gBCAnCD,EAAOC,QAAU,CAAC,cAAgB,iC,gBCAlCD,EAAOC,QAAU,CAAC,KAAO,6B,+LCEV,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIC,UAAWC,IAAIC,KAAnB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,yCAAYC,EAAZ,W,oBCbS,SAASI,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC3CC,EAAYC,OAAOC,KAAKJ,GAC9B,OACE,qBAAKJ,UAAWC,IAAIQ,eAApB,SACGH,EAAUI,KAAI,SAACC,EAAYC,GAAb,OACb,wBAEEC,KAAK,SACLC,QAAS,kBAAMT,EAAgBM,IAHjC,SAKGA,GAJIC,Q,oBCNA,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,oBAAIjB,UAAWC,IAAIiB,cAAnB,SAAmCF,IAClCC,K,qBCJQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGpB,UAAWC,IAAIoB,KAAlB,SAAyBD,I,IC4EnBE,E,4MAvEbC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP2B,mBAAqB,SAACC,GAKpB,OAJuBlB,OAAOmB,OAAOD,GACAE,QAAO,SAAC7B,EAAO8B,GAClD,OAAQ9B,EAAS8B,IAChB,I,EAILC,gCAAkC,SAACD,GACjC,IAAME,EAAeF,EAASjC,KAExBoC,EADiBxB,OAAOmB,OAAOE,GACAD,QAAO,SAAC7B,EAAO8B,GAClD,OAAQ9B,EAAS8B,IAChB,GACH,OAAOI,KAAKC,MAAOH,EAAeC,EAAiB,M,EAGrD1B,gBAAkB,SAAC6B,GACjB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAQE,EAAUF,GAAS,O,4CAIhC,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,yBAAQA,UAAU,WAAlB,UACE,cAACe,EAAD,CAASC,MAAM,wBAAf,SACE,cAACb,EAAD,CACEC,QAASiC,KAAKd,MACdlB,gBAAiBgC,KAAKhC,oBAI1B,cAACU,EAAD,CAASC,MAAM,aAAf,SAC2C,IAAxCqB,KAAKb,mBAAmBa,KAAKd,OAC5B,cAACJ,EAAD,CAAcC,QAAQ,sBAEtB,cAAC1B,EAAD,CACEC,KAAM0C,KAAKd,MAAM5B,KACjBC,QAASyC,KAAKd,MAAM3B,QACpBC,IAAKwC,KAAKd,MAAM1B,IAChBC,MAAOuC,KAAKb,mBAAmBa,KAAKd,OACpCxB,mBAAoBsC,KAAKR,gCACvBQ,KAAKd,oB,GAnDLe,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e4f79d04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__MoSD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperButtons\":\"FeedbackOptions_wrapperButtons__39jDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleFeedback\":\"Section_titleFeedback__fBB6r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__33i2g\"};","import PropTypes from \"prop-types\";\r\nimport css from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul className={css.list}>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Total: {positivePercentage} %</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./FeedbackOptions.module.css\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const keyObject = Object.keys(options);\r\n  return (\r\n    <div className={css.wrapperButtons}>\r\n      {keyObject.map((nameButton, key) => (\r\n        <button\r\n          key={key}\r\n          type=\"submit\"\r\n          onClick={() => onLeaveFeedback(nameButton)}\r\n        >\r\n          {nameButton}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./Section.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h1 className={css.titleFeedback}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={css.text}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import \"./App.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport Statistics from \"./components/Statistics\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions\";\r\nimport Section from \"./components/Section\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = (feedbacks) => {\r\n    const valuesFeedback = Object.values(feedbacks);\r\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\r\n      return (total += feedback);\r\n    }, 0);\r\n    return totalFeedback;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (feedback) => {\r\n    const goodFeedback = feedback.good;\r\n    const valuesFeedback = Object.values(feedback);\r\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\r\n      return (total += feedback);\r\n    }, 0);\r\n    return Math.round((goodFeedback / totalFeedback) * 100);\r\n  };\r\n\r\n  onLeaveFeedback = (value) => {\r\n    this.setState((prevState) => ({\r\n      [value]: prevState[value] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"feedback\">\r\n          <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions\r\n              options={this.state}\r\n              onLeaveFeedback={this.onLeaveFeedback}\r\n            />\r\n          </Section>\r\n\r\n          <Section title=\"Statistics\">\r\n            {this.countTotalFeedback(this.state) === 0 ? (\r\n              <Notification message=\"No feedback given\" />\r\n            ) : (\r\n              <Statistics\r\n                good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                total={this.countTotalFeedback(this.state)}\r\n                positivePercentage={this.countPositiveFeedbackPercentage(\r\n                  this.state\r\n                )}\r\n              />\r\n            )}\r\n          </Section>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  state: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }),\r\n  countTotalFeedback: PropTypes.func,\r\n  countPositiveFeedbackPercentage: PropTypes.func,\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}