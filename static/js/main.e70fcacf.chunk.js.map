{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","css","list","FeedbackOptions","options","onLeaveFeedback","keyObject","Object","keys","wrapperButtons","map","nameButton","key","type","onClick","Section","title","children","titleFeedback","Notification","message","text","App","useState","setGood","setNeutral","setBad","countTotalFeedback","feedbacks","values","reduce","feedback","value","prevState","goodFeedback","totalFeedback","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,eAAiB,0C,gBCAnCD,EAAOC,QAAU,CAAC,cAAgB,iC,gBCAlCD,EAAOC,QAAU,CAAC,KAAO,6B,+JCEV,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIC,UAAWC,IAAIC,KAAnB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,yCAAYC,EAAZ,W,oBCbS,SAASI,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC3CC,EAAYC,OAAOC,KAAKJ,GAC9B,OACE,qBAAKJ,UAAWC,IAAIQ,eAApB,SACGH,EAAUI,KAAI,SAACC,EAAYC,GAAb,OACb,wBAEEC,KAAK,SACLC,QAAS,kBAAMT,EAAgBM,IAHjC,SAKGA,GAJIC,Q,oBCNA,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,oBAAIjB,UAAWC,IAAIiB,cAAnB,SAAmCF,IAClCC,K,oBCJQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGpB,UAAWC,IAAIoB,KAAlB,SAAyBD,ICqFnBE,MAjFf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACN5B,EADM,KACA6B,EADA,OAEiBD,mBAAS,GAF1B,mBAEN3B,EAFM,KAEG6B,EAFH,OAGSF,mBAAS,GAHlB,mBAGN1B,EAHM,KAGD6B,EAHC,KAKPC,EAAqB,SAACC,GAK1B,OAJuBrB,OAAOsB,OAAOD,GACAE,QAAO,SAAChC,EAAOiC,GAClD,OAAQjC,EAASiC,IAChB,IA8BL,OACE,qBAAK/B,UAAU,MAAf,SACE,yBAAQA,UAAU,WAAlB,UACE,cAACe,EAAD,CAASC,MAAM,wBAAf,SACE,cAACb,EAAD,CACEC,QAAS,CAAET,OAAMC,UAASC,OAC1BQ,gBAvBc,SAAC2B,GACvB,OAAQA,GACN,IAAK,OACHR,GAAQ,SAACS,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHR,GAAW,SAACQ,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHP,GAAO,SAACO,GAAD,OAAeA,EAAY,WAkBlC,cAAClB,EAAD,CAASC,MAAM,aAAf,SACkD,IAA/CW,EAAmB,CAAEhC,OAAMC,UAASC,QACnC,cAACsB,EAAD,CAAcC,QAAQ,sBAEtB,cAAC1B,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,EAAmB,CAAEhC,OAAMC,UAASC,QAC3CE,mBA7C4B,SAACgC,GACvC,IAAMG,EAAeH,EAASpC,KAExBwC,EADiB5B,OAAOsB,OAAOE,GACAD,QAAO,SAAChC,EAAOiC,GAClD,OAAQjC,EAASiC,IAChB,GACH,OAAOK,KAAKC,MAAOH,EAAeC,EAAiB,KAuCrBG,CAAgC,CAClD3C,OACAC,UACAC,kBChEhB0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e70fcacf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__MoSD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperButtons\":\"FeedbackOptions_wrapperButtons__39jDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleFeedback\":\"Section_titleFeedback__fBB6r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__33i2g\"};","import PropTypes from \"prop-types\";\r\nimport css from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul className={css.list}>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Total: {positivePercentage} %</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./FeedbackOptions.module.css\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const keyObject = Object.keys(options);\r\n  return (\r\n    <div className={css.wrapperButtons}>\r\n      {keyObject.map((nameButton, key) => (\r\n        <button\r\n          key={key}\r\n          type=\"submit\"\r\n          onClick={() => onLeaveFeedback(nameButton)}\r\n        >\r\n          {nameButton}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./Section.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h1 className={css.titleFeedback}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={css.text}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import \"./App.css\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = (feedbacks) => {\n    const valuesFeedback = Object.values(feedbacks);\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return totalFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = (feedback) => {\n    const goodFeedback = feedback.good;\n    const valuesFeedback = Object.values(feedback);\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return Math.round((goodFeedback / totalFeedback) * 100);\n  };\n\n  const onLeaveFeedback = (value) => {\n    switch (value) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"feedback\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={{ good, neutral, bad }}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback({ good, neutral, bad }) === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback({ good, neutral, bad })}\n              positivePercentage={countPositiveFeedbackPercentage({\n                good,\n                neutral,\n                bad,\n              })}\n            />\n          )}\n        </Section>\n      </header>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  state: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  countTotalFeedback: PropTypes.func,\n  countPositiveFeedbackPercentage: PropTypes.func,\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}